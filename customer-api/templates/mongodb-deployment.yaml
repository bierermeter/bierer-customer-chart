{{- if .Values.mongodbEnabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mongodb.fullname" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  {{- if not .Values.mongodb.autoscaling.enabled }}
  replicas: {{ .Values.mongodb.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mongodb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.mongodb.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mongodb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.mongodb.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mongodb.serviceAccountName" . }}
      securityContext:
        fsGroup: 200
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {}
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MONGODB_EXTRA_USERNAMES
              value: admin
            - name: MONGODB_EXTRA_DATABASES
              value: recordings
            - name: MONGODB_EXTRA_PASSWORDS
              value: "{{ .Values.mongodbPassword }}"
            - name: MONGODB_ROOT_USER
              value: root
            - name: MONGODB_ROOT_PASSWORD
              value: "{{ .Values.mongodbPassword }}"
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 27017
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.mongodb.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /bitnami/mongodb/
            name: mongodb
      {{- with .Values.mongodb.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mongodb.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mongodb.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: mongodb
        persistentVolumeClaim:
          claimName: mongodb
  strategy:
    type: Recreate
{{- end -}}
